services:
  # Login Service (Go + Gin + Redis)
  login-service:
    build:
      context: ./login-service
      dockerfile: Dockerfile
    container_name: login-service
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password_123}
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_NAME=login-service
      - SERVICE_PORT=8081
    labels:
      - "traefik.enable=false"
      - "consul.service.name=login-service"
      - "consul.service.port=8081"
      - "consul.service.tags=login,api,microservice"
    ports:
      - "8081:8081"
    networks:
      - microservices-network
    depends_on:
      consul:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Customer Service Simple (Python + Flask)
  customer-service:
    build:
      context: ./customer-service-simple
      dockerfile: Dockerfile
    container_name: customer-service
    restart: unless-stopped
    environment:
      - SERVICE_NAME=customer-service
      - SERVICE_PORT=3000
    labels:
      - "traefik.enable=false"
      - "consul.service.name=customer-service"
      - "consul.service.port=3000"
      - "consul.service.tags=customer,api,microservice"
    ports:
      - "3001:3000"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Order Service (TypeScript + Node.js + Express + MongoDB)
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-mongo_admin}:${MONGO_ROOT_PASSWORD:-mongo_password_123}@mongodb:27017/${MONGO_DATABASE:-OrderDB}?authSource=admin
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_NAME=order-service
      - SERVICE_PORT=3000
    labels:
      - "traefik.enable=false"
      - "consul.service.name=order-service"
      - "consul.service.port=3000"
      - "consul.service.tags=order,api,microservice"
    ports:
      - "3000:3000"
    networks:
      - microservices-network
    depends_on:
      consul:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=1 --spider http://127.0.0.1:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
