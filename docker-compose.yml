# Main Docker Compose file that orchestrates all services
# This file extends the individual compose files

services:
  # ===========================================
  # INFRASTRUCTURE SERVICES
  # ===========================================

  # Consul for Service Discovery
  consul:
    extends:
      file: docker-compose.infrastructure.yml
      service: consul

  # Traefik API Gateway
  traefik:
    extends:
      file: docker-compose.infrastructure.yml
      service: traefik


  # ===========================================
  # DATABASE SERVICES
  # ===========================================

  # Redis for Login Service
  redis:
    extends:
      file: docker-compose.databases.yml
      service: redis

  # PostgreSQL for User Service
  postgres:
    extends:
      file: docker-compose.databases.yml
      service: postgres

  # MongoDB for Order Service
  mongodb:
    extends:
      file: docker-compose.databases.yml
      service: mongodb

  # ===========================================
  # MICROSERVICES
  # ===========================================

  # Login Service (Go + Gin + Redis) - READY
  login-service:
    extends:
      file: docker-compose.services.yml
      service: login-service

  # Customer Service (Python + Flask) - READY ✅
  customer-service:
    extends:
      file: docker-compose.services.yml
      service: customer-service

  # Order Service (Node.js + Express + MongoDB) - READY ✅
  order-service:
    extends:
      file: docker-compose.services.yml
      service: order-service

  # User Service (Python + FastAPI + PostgreSQL) - READY ✅
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-UserDB}
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_NAME=user-service
      - SERVICE_PORT=8000
      - SERVICE_HOST=user-service
    labels:
      - "traefik.enable=false"
      - "consul.service.name=user-service"
      - "consul.service.port=8000"
      - "consul.service.tags=user,api,microservice"
    ports:
      - "8000:8000"
    networks:
      - microservices-network
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ===========================================
  # FRONTEND
  # ===========================================   # Frontend (Angular + Nginx) - NOT READY YET
  # frontend:
  #   extends:
  #     file: docker-compose.frontend.yml
  #     service: frontend

# ===========================================
# VOLUMES
# ===========================================
volumes:
  consul_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  mongodb_data:
    driver: local

# ===========================================
# NETWORKS
# ===========================================
networks:
  microservices-network:
    driver: bridge
