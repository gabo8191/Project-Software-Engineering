# Main Docker Compose file that orchestrates all services
# This file extends the individual compose files

services:
  # ===========================================
  # INFRASTRUCTURE SERVICES
  # ===========================================

  # Consul for Service Discovery
  consul:
    extends:
      file: docker-compose.infrastructure.yml
      service: consul

  # Traefik API Gateway
  traefik:
    extends:
      file: docker-compose.infrastructure.yml
      service: traefik


  # ===========================================
  # DATABASE SERVICES
  # ===========================================

  # Redis for Login Service
  redis:
    extends:
      file: docker-compose.databases.yml
      service: redis

  # PostgreSQL for User Service
  postgres:
    extends:
      file: docker-compose.databases.yml
      service: postgres

  # MongoDB for Order Service
  mongodb:
    extends:
      file: docker-compose.databases.yml
      service: mongodb

  # ===========================================
  # MICROSERVICES
  # ===========================================

  # Login Service (Go + Gin + Redis) - READY
  login-service:
    extends:
      file: docker-compose.services.yml
      service: login-service

  # User Service (Python + FastAPI + PostgreSQL) - NOT READY YET
  # user-service:
  #   extends:
  #     file: docker-compose.services.yml
  #     service: user-service

  # Order Service (Node.js + Express + MongoDB) - READY âœ…
  order-service:
    extends:
      file: docker-compose.services.yml
      service: order-service

  # ===========================================
  # FRONTEND
  # ===========================================

  # Frontend (Angular + Nginx) - NOT READY YET
  # frontend:
  #   extends:
  #     file: docker-compose.frontend.yml
  #     service: frontend

# ===========================================
# VOLUMES
# ===========================================
volumes:
  consul_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  mongodb_data:
    driver: local

# ===========================================
# NETWORKS
# ===========================================
networks:
  microservices-network:
    driver: bridge
