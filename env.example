# ===========================================
# CONFIGURACIÓN DEL PROYECTO - ENTORNO LOCAL
# ===========================================
# Este archivo contiene las variables de entorno para el desarrollo local
# con Docker. Copiar a .env y ajustar según necesidades.

# ===========================================
# CONFIGURACIÓN GENERAL
# ===========================================
NODE_ENV=development
DEBUG=true
LOG_LEVEL=info

# ===========================================
# CONFIGURACIÓN DE RED
# ===========================================
NETWORK_NAME=microservices-network

# ===========================================
# CONFIGURACIÓN DE REDIS (LoginMicroservice)
# ===========================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=redis_password_123
REDIS_DB=0

# ===========================================
# CONFIGURACIÓN DE POSTGRESQL (UserMgmtMicroservice)
# ===========================================
# Base de datos: CustomerDB
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=customerdb
POSTGRES_USER=postgres_user
POSTGRES_PASSWORD=postgres_password_123
POSTGRES_SSL_MODE=disable

# URL de conexión completa
DATABASE_URL=postgresql://postgres_user:postgres_password_123@postgres:5432/customerdb

# ===========================================
# CONFIGURACIÓN DE MONGODB (OrderMgmtMicroservice)
# ===========================================
# Base de datos: OrderDB
MONGO_HOST=mongodb
MONGO_PORT=27017
MONGO_DATABASE=OrderDB
MONGO_ROOT_USERNAME=mongo_admin
MONGO_ROOT_PASSWORD=mongo_password_123

# URL de conexión completa
MONGODB_URI=mongodb://mongo_admin:mongo_password_123@mongodb:27017/OrderDB?authSource=admin

# ===========================================
# CONFIGURACIÓN DE CONSUL (Service Discovery)
# ===========================================
CONSUL_HOST=consul
CONSUL_PORT=8500
CONSUL_DATACENTER=dc1
CONSUL_UI_ENABLED=true

# ===========================================
# CONFIGURACIÓN DE TRAEFIK (API Gateway)
# ===========================================
TRAEFIK_DASHBOARD_PORT=8080
TRAEFIK_HTTP_PORT=80
TRAEFIK_HTTPS_PORT=443
TRAEFIK_LOG_LEVEL=INFO

# ===========================================
# CONFIGURACIÓN DE MICROSERVICIOS
# ===========================================

# LoginMicroservice (Go + Gin + Redis)
LOGIN_SERVICE_PORT=8080
LOGIN_SERVICE_HOST=localhost
LOGIN_SERVICE_NAME=login-service

# UserMgmtMicroservice (Python + FastAPI + PostgreSQL)
USER_SERVICE_PORT=8000
USER_SERVICE_HOST=localhost
USER_SERVICE_NAME=user-service

# OrderMgmtMicroservice (Node.js + Express + MongoDB)
ORDER_SERVICE_PORT=3000
ORDER_SERVICE_HOST=localhost
ORDER_SERVICE_NAME=order-service

# Frontend (Angular + Nginx)
FRONTEND_PORT=4200
FRONTEND_HOST=localhost

# ===========================================
# CONFIGURACIÓN DE SEGURIDAD
# ===========================================
# JWT Secret para autenticación
JWT_SECRET=your-super-secret-jwt-key-for-development-only-change-in-production
JWT_EXPIRATION_HOURS=24

# API Keys (para desarrollo)
API_KEY=dev-api-key-12345
API_VERSION=v1

# ===========================================
# CONFIGURACIÓN DE CORS
# ===========================================
CORS_ORIGINS=http://localhost:4200,http://localhost:3000,http://localhost:8080
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=Content-Type,Authorization,X-Requested-With

# ===========================================
# CONFIGURACIÓN DE LOGGING
# ===========================================
LOG_FORMAT=json
LOG_OUTPUT=stdout
LOG_FILE_PATH=/var/log/microservices

# ===========================================
# CONFIGURACIÓN DE HEALTH CHECKS
# ===========================================
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# ===========================================
# CONFIGURACIÓN DE DESARROLLO
# ===========================================
# Hot reload para desarrollo
HOT_RELOAD=true
WATCH_MODE=true

# Debugging
DEBUG_MODE=true
VERBOSE_LOGGING=true

# ===========================================
# CONFIGURACIÓN DE TESTING
# ===========================================
# Base de datos de pruebas
TEST_DATABASE_URL=postgresql://postgres_user:postgres_password_123@postgres:5432/customerdb_test
TEST_MONGODB_URI=mongodb://mongo_admin:mongo_password_123@mongodb:27017/OrderDB_test?authSource=admin

# ===========================================
# CONFIGURACIÓN DE MONITOREO
# ===========================================
# Métricas y monitoreo
METRICS_ENABLED=true
METRICS_PORT=9090
HEALTH_ENDPOINT=/health
READINESS_ENDPOINT=/ready
LIVENESS_ENDPOINT=/live

# ===========================================
# CONFIGURACIÓN DE RATE LIMITING
# ===========================================
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=10

# ===========================================
# CONFIGURACIÓN DE CACHE
# ===========================================
CACHE_TTL_SECONDS=3600
CACHE_MAX_SIZE=1000
CACHE_ENABLED=true

# ===========================================
# CONFIGURACIÓN DE VALIDACIÓN
# ===========================================
# Validación de entrada
VALIDATION_STRICT_MODE=true
VALIDATION_ERROR_DETAILS=true

# ===========================================
# CONFIGURACIÓN DE DESARROLLO LOCAL
# ===========================================
# URLs para desarrollo local
API_BASE_URL=http://localhost
FRONTEND_URL=http://localhost:4200
LOGIN_SERVICE_URL=http://localhost:8080
USER_SERVICE_URL=http://localhost:8000
ORDER_SERVICE_URL=http://localhost:3000

# ===========================================
# CONFIGURACIÓN DE DOCKER
# ===========================================
# Configuración específica de Docker
DOCKER_NETWORK=microservices-network
DOCKER_COMPOSE_PROJECT_NAME=software-engineering-project

# ===========================================
# CONFIGURACIÓN DE DESARROLLO - CREDENCIALES DE PRUEBA
# ===========================================
# Usuarios de prueba para desarrollo
TEST_USER_DOCUMENT=12345678
TEST_USER_PASSWORD=test123
TEST_USER_EMAIL=test@example.com

# Cliente de prueba
TEST_CUSTOMER_DOCUMENT=87654321
TEST_CUSTOMER_FIRSTNAME=Juan
TEST_CUSTOMER_LASTNAME=Pérez
TEST_CUSTOMER_EMAIL=juan.perez@test.com

# Pedido de prueba
TEST_ORDER_ID=ORD-TEST-001
TEST_ORDER_STATUS=Received
