# Dynamic configuration for Traefik
http:
  middlewares:
    # CORS middleware
    cors:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        accessControlAllowOriginList:
          - 'http://localhost:4200'
          - 'http://frontend:80'
        accessControlAllowHeaders:
          - 'Content-Type'
          - 'Authorization'
          - 'X-Requested-With'
        accessControlMaxAge: 100
        addVaryHeader: true

    # Rate limiting middleware
    rate-limit:
      rateLimit:
        burst: 100
        average: 50

    # Security headers middleware
    security-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: 'https'
        customResponseHeaders:
          X-Frame-Options: 'SAMEORIGIN'
          X-Content-Type-Options: 'nosniff'
          X-XSS-Protection: '1; mode=block'
          Referrer-Policy: 'strict-origin-when-cross-origin'

    # Login service middleware
    login-strip-prefix:
      stripPrefix:
        prefixes:
          - '/login'

    # Customer service middleware
    customer-strip-prefix:
      stripPrefix:
        prefixes:
          - '/customer'

    # Order service middleware
    order-strip-prefix:
      stripPrefix:
        prefixes:
          - '/order'

  routers:
    # Login Microservice router
    login-service:
      rule: 'PathPrefix(`/login`)'
      service: 'login-service'
      middlewares:
        - cors
        - security-headers
        - rate-limit

    # Customer Management Microservice router
    customer-service:
      rule: 'PathPrefix(`/customer`)'
      service: 'customer-service'
      middlewares:
        - cors
        - security-headers
        - rate-limit

    # Order Management Microservice router
    order-service:
      rule: 'PathPrefix(`/order`)'
      service: 'order-service'
      middlewares:
        - cors
        - security-headers
        - rate-limit
        - order-strip-prefix
        - order-strip-prefix

  services:
    # Login Microservice
    login-service:
      loadBalancer:
        servers:
          - url: 'http://login-service:8081'

    # Customer Management Microservice
    customer-service:
      loadBalancer:
        servers:
          - url: 'http://user-service:8000'

    # Order Management Microservice
    order-service:
      loadBalancer:
        servers:
          - url: 'http://order-service:3000'
